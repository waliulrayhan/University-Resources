## Scaling
Sketch the signal x[n], the sketch y[n]=x[n/2]
close all;
clc;

start_value = input('Enter the start value: ');  % -6
end_value = input('Enter the end value: ');  % 6

n1 = start_value:end_value;

y = input('Enter the values of signal: ');  % [1 0.5 1 0.5 1 0.5 1 0.5 1 0.5 1 0.5 1]

index = 1;

n2 = (2 * start_value):(2 * end_value);

for i = 1:length(n2)
    x1(i) = n2(i);
    if (rem(n2(i), 2) == 0 && index <= length(y))  % Check if index is within the range of y
        y1(i) = y(index);
        index = index + 1;
    else
        y1(i) = 0;
    end
end

subplot(2, 1, 1);
stem(n1, y, 'r');
xlabel('Time');
ylabel('Amplitude');
grid on;
grid minor;
axis([(start_value - 1) (end_value + 1) -2 2]);
title('Original signal Y[n] = X[n]');

subplot(2, 1, 2);
stem(x1, y1, 'b');
xlabel('Time');
ylabel('Amplitude');
grid on;
grid minor;
axis([(2 * start_value - 1) (2 * end_value + 1) -2 2]);
title('Compression signal Y[n] = X[n/2]');



## y[n]=x[2n]

% Close all open figures, clear workspace, and clear command window
close all;
clear all;
clc;

% Define the original signal X[n]
n = -6:6;
y = [1 0.5 1 0.5 1 0.5 1 0.5 1 0.5 1 0.5 1];

% Initialize variables for compressed signal (Y[n] = X[2n])
index = 1;
for i = 1:length(n)
    % Create compressed signal by dividing time index by 2
    x1(index) = n(i) / 2;
    y1(index) = y(i);
    index = index + 1;
end

% Plot the original signal X[n]
subplot(3,1,1);
stem(n, y);
xlabel("Time domain");
ylabel("Amplitude");
grid on;
axis([-8 8 -0.5 1.5]);
title("Original signal X[n]");

% Plot the compressed signal Y[n] = X[2n]
subplot(3,1,2);
stem(x1, y1, 'r');
xlabel("Time domain");
ylabel("Amplitude");
grid on;
grid minor;
axis([-8 8 -0.5 1.5]);
title("Compression signal Y[n] = X[2n]");

% Initialize variables for expanded signal (Y[n] = X[n/2])
index = 1;
n2 = -12:12;
for i = 1:length(n2)
    x1(i) = n2(i);
    if (rem(n2(i), 2) == 0)
        % Create expanded signal by selecting every second element of the original signal
        y1(i) = y(index);
        index = index + 1;
    else
        y1(i) = 0; % Set odd-indexed samples to 0
    end
end

% Plot the expanded signal Y[n] = X[n/2]
subplot(3,1,3);
stem(x1, y1, 'b');
xlabel("Time domain");
ylabel("Amplitude");
grid on;
grid minor;
axis([-13 13 -0.5 1.5]);
title("Expanding signal Y[n] = X[n/2]");